---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
    }
    http {
      server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # Set nginx to serve files from the shared volume!
        root /var/www/app/public;
        index index.php index.html index.htm;
        server_name _;
        location / {
          try_files $uri /index.php$is_args$args;
        }
        location ~ ^/index\.php(/|$) {
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
          internal;
        }
        location ~ \.php$ {
                 return 404;
        }
      }
    }


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unit-testing-api-api
  labels:
    app: unit-testing-api-api
spec:

  replicas: 1
  selector:
    matchLabels:
      app: unit-testing-api-api
  template:
    metadata:
      labels:
        app: unit-testing-api-api
    spec:
      volumes:
        - name: shared-files
          emptyDir: {}
        - name: nginx-config-volume
          configMap:
            name: nginx-config

      containers:
        - name: php
          image: technetworking/unit-testing-api-api:php
          imagePullPolicy: Always
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/app
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /app/. /var/www/app/"]

        - name: nginx
          image: nginx:latest
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/app
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          ports:
            - containerPort: 80

      imagePullSecrets:
        - name: emnsecret
---
apiVersion: v1
kind: Service
metadata:
  name: unit-testing-api-api-nginx-svc
  annotations:
    external-dns.alpha.kubernetes.io/hostname: content.api.emailingnetwork.com
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:eu-west-1:935820860904:certificate/3dd2f600-f70d-49ed-aa84-a975df589b08
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
spec:
  type: LoadBalancer
  ports:
    - name: https
      port: 443
      targetPort: 80
  selector:
    app: unit-testing-api-api
